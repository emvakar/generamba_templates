{% include 'header' %}

import Cocoa

class {{ module_info.name }}ViewController: BaseViewController {

    var presenter: {{ module_info.name }}PresenterProtocol!

    private lazy var containerView = makeContainerView()

    override func viewDidLoad() {
        super.viewDidLoad()
        presenter.viewDidLoad()

        let label = NSTextField()
        label.maximumNumberOfLines = 0
        label.stringValue = "{{ module_info.name }}"
        label.isBezeled = false
        label.isEditable = false
        containerView.addSubview(label)
        label.snp.makeConstraints { (make) in
            make.centerY.equalToSuperview()
            make.left.right.equalToSuperview().inset(24)
        }
    }

    // MARK: - make constraints

    private func makeConstraints() {
        containerView.snp.makeConstraints { (make) in
            make.edges.equalToSuperview()
        }
    }
    
    // MARK: - Lazy Initializations

    private func makeContainerView() -> NSView {
        let containerView = NSView()
        view.addSubview(containerView)
        return containerView
    }
    
}

// MARK: - {{module_info.name}}ViewProtocol

extension {{ module_info.name }}ViewController: {{module_info.name}}ViewProtocol {

    func setupInitialState() {
        makeConstraints()
    }

}

// MARK: - Private

private extension {{ module_info.name }}ViewController { }
